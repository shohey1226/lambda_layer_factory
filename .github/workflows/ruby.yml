name: Ruby binary build
on:
  push:
    paths:
    - ".github/workflows/ruby.yml"
    - "scripts/build_ruby.sh"
jobs:
  build:
    runs-on: ubuntu-latest
   strategy:
     matrix:
       target: [3.0.3]
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies with LambCI
        uses: docker://lambci/lambda-base:build
        with:
          entrypoint: scripts/build_ruby.sh 
          args: ${{matrix.target}} 
      - name: Bundle layer with dependencies
        run: |
          zip -r ruby_v${{matrix.target}}-layer.zip .     
      - name: Create Release(ruby-layer)
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ruby_v${{matrix.target}}
          release_name: git_v${{matrix.target}}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ruby_v${{matrix.target}}-layer.zip 
          asset_name: ruby_v${{matrix.target}}-layer.zip 
          asset_content_type: application/zip
#  setup:
  #    steps: 
  #      - name: Create directory
  #        run: mkdir ./build
  #  build:
  #    strategy:
  #      matrix:
  #        target: [3.0.3]
  #    container: 
  #      image: lambci/lambda-base:build 
  #      volumes:
  #        - ./build:/tmp/build
  #      env:
  #        RUBY_VERSION: ${{matrix.target}}
  #    steps:
  #      - name: build ruby ${{ matrix.target }}
  #        run: |
  #          yum install -y git bzip2 openssl-devel libyaml-devel libffi-devel \
  #            readline-devel zlib-devel gdbm-devel ncurses-devel \
  #            gcc gcc-c++ autoconf automake libtool bison
  #          mkdir /tmp/build
  #          cd /tmp/build
  #          git clone https://github.com/rbenv/ruby-build.git
  #          PREFIX=/usr/local ./ruby-build/install.sh
  #          mkdir -p /tmp/build/opt/ruby${RUBY_VERSION}
  #          ruby-build $RUBY_VERSION /tmp/build/opt/ruby${RUBY_VERSION}
  #    upload:
  #      - name: zip ruby ${{ matrix.target}}
  #        run:  zip -r ruby${{matrix.target}}.zip ./build
  #      - uses: actions/upload-artifact@v2
  #        with:
  #          name: ruby${{matrix.target}}.zip 
  #          path: layers/ruby${{matrix.target}}.zip
